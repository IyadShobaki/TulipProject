Tulip Project Steps

1. Create ASP.NET Web Application (.NET Framework) --> API    (TulipDataManager)
2. Update all NuGet pacages that need to be update (exept Bootstrap 4)

// POSTMAN
3. Register a new account using Postman:
	- POST: https://localhost:44351/api/account/register
	- Click on Body -> choose 'raw', and JSON (instead of text)
	- New Json object { "Email": "myEmail", "myPassword": "*****", "ConfirmPassword": "******" }
	- Click on Send
4. Get the token using Postman:
	- GET: https://localhost:44351/token
	- Click on Body -> choose 'x-www-form-urlencoded'
	- Under KEY type (grant_type, username, password)
	- Under VALUE type (password, myEmail, myPassword)
	- Click on Send
5. We can make requests using the token (see next example):
	- GET: https://localhost:44351/api/values
	- Click on Headers
	- Under KEY type (Authorization)
	- Under VALUE type (Bearer myToken)
	- Click on Send

// Configuring Swagger in WebAPI (Swagger allow us to document our API)
6. Install 'swashbuckle' NuGet package to add Swagger
7. Configuring Swagger:
	- Create a new class to add token route to swagger (AuthTokenOperation.cs)
	- Add "c.DocumentFilter<AuthTokenOperation>();" to SwaggerConfig.cs
	- Create a new class to add an operation filter (AuthorizationOperationFilter.cs)

// ------
8. Add SQL Server Database Project:
	- Setup and publish the "empty" database
// ------
9. Add WPF UI Project:
	- Install Caliburn.Micro NuGet package
	- Wire up Caliburn.Micro by adding MVVM folders and Bootstrapper class
	- In App.xaml:
		* Remove (StartupUri="MainWindow.xaml")
		* Add to the Application.Resources the following:
							<ResourceDictionary>
								<ResourceDictionary.MergedDictionaries>
									<ResourceDictionary>
										<local:Bootstrapper x:Key="Bootstarapper"/>
									</ResourceDictionary>
								</ResourceDictionary.MergedDictionaries>
							</ResourceDictionary>
	- Delete MainWindow.xaml

// -------
10. Setup the dependency injection system for WPF UI, which come with Caliburn.Micro (Simple Container)
	- Build the system inside Bootstrapper.cs 
	















